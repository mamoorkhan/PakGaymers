# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-latest

variables:
  azureSubscription: 'PakGaymers'
  
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  
  webJobsProjectName: 'PakGaymers'
  webJobsName: 'PakGaymers'
  webAppName: 'PakGaymers'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--output $(Build.BinariesDirectory)/publish_output/App_Data/jobs/continuous/PakGaymers'
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureAppServiceManage@0
  displayName: 'WebJob: stop'
  inputs:
    azureSubscription: $(azureSubscription)
    Action: 'Stop all continuous webjobs'
    WebAppName: $(webAppName) 

- task: FtpUpload@2
  displayName: 'WebJob: publish'
  inputs:    
    credentialsOption: 'inputs'
    serverUrl: $(ftpServerUrl)
    username: $(ftpUsername)
    password: $(ftpPassword)
    rootDirectory: '$(build.SourcesDirectory)/src/$(webJobsProjectName)/bin/$(buildConfiguration)/'
    filePatterns: '**'
    remoteDirectory: '/site/jobs/continuous/$(webJobsName)/'
    clean: false
    cleanContents: false
    preservePaths: true
    trustSSL: false

- task: AzureAppServiceManage@0
  displayName: 'WebJob: start'
  inputs:
    azureSubscription: $(azureSubscription)
    Action: 'Start all continuous webjobs'
    WebAppName: $(webAppName)  
